jobs:
  include:
  
    - &integration-test-stage
      stage: Integration Testing
      sudo: true
      dist: trusty
      language: generic
      os: linux
      env:
      - SYS=25 ABI="google_apis;armeabi-v7a"
      # Run integration tests on android        
      # Install the Android SDK Dependency.
      before_install:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
        # Install the Android SDK Dependency.
        - export ANDROID_HOME=~/android-sdk-linux
        - if [ $TRAVIS_OS_NAME == "osx" ]; then wget -q "https://dl.google.com/android/repository/sdk-tools-darwin-4333796.zip" -O android-sdk-tools.zip; else wget -q "https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip" -O android-sdk-tools.zip; fi
        #  - wget -q "https://dl.google.com/android/repository/sdk-tools-${OS}-4333796.zip" -O android-sdk-tools.zip
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
        - rm android-sdk-tools.zip
        - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
        # Silence warning.
        - mkdir -p ~/.android
        - touch ~/.android/repositories.cfg
        - HOMEBREW_NO_AUTO_UPDATE=1
        - if [ $TRAVIS_OS_NAME == "osx" ]; then brew cask uninstall java; brew tap caskroom/versions; brew cask install java8; fi
        # Accept licenses before installing components, no need to echo y for each component
        - yes | sdkmanager --licenses
        # Platform tools
        - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
        - sdkmanager --list | head -15
        # install older packages (for emulator)
        - sdkmanager "build-tools;25.0.2" "platforms;android-25" > /dev/null
        # Create and start emulator.
        - sdkmanager "system-images;android-$SYS;$ABI" > /dev/null
        - sdkmanager --list | head -15
        - echo no | avdmanager create avd --force -n test -k "system-images;android-$SYS;$ABI"
        # fix timezone warning
        - if [ $TRAVIS_OS_NAME == "osx" ]; then sudo ln -sf /usr/share/zoneinfo/US/Pacific /etc/localtime; fi
        # use the absolute emulator path in case older version installed (on default path)
        - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader &
      before_script:
      # Wait for emulator to startup.
        - android-wait-for-emulator
        - adb shell input keyevent 82

        # install flutter
        - git clone https://github.com/flutter/flutter.git -b beta
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter precache
        - flutter doctor -v
        - flutter devices
      script: travis_retry flutter drive --target=test_driver/app.dart
    - <<: *integration-test-stage
      os: osx
      # use oldest flutter supported version of xcode
      osx_image: xcode10.2
      env: running driver on simulator
      # Run integration tests on ios
      before_install:
        - open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app
        - brew update
        - brew install libimobiledevice
        - brew install ideviceinstaller
        - brew install ios-deploy
        - brew install cocoapods || echo 'ignore exit(1)'
        - brew link --overwrite cocoapods
        - git clone https://github.com/flutter/flutter.git -b beta
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter precache
        - flutter doctor -v
        - flutter devices
